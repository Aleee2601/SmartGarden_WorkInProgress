// =============================================
// SmartGarden Database Schema (DBML)
// View this at: https://dbdiagram.io
// =============================================

Project SmartGarden {
  database_type: 'SQL Server'
  Note: 'IoT Smart Garden Plant Monitoring and Auto-Watering System'
}

// =============================================
// Enums
// =============================================

Enum WateringMode {
  Manual [note: '0 - Manual watering by user']
  Auto [note: '1 - Automatic watering by system']
}

Enum AlertType {
  LowMoisture [note: '0 - Soil moisture too low']
  HighMoisture [note: '1 - Soil moisture too high']
  LowTemperature [note: '2 - Temperature too low']
  HighTemperature [note: '3 - Temperature too high']
  LowHumidity [note: '4 - Air humidity too low']
  HighHumidity [note: '5 - Air humidity too high']
  LowWaterLevel [note: '6 - Water reservoir low']
  DeviceOffline [note: '7 - ESP32 device offline']
  PlantNeedsWater [note: '8 - Plant needs watering']
}

Enum AlertSeverity {
  Info [note: '0 - Informational']
  Warning [note: '1 - Warning - attention needed']
  Critical [note: '2 - Critical - immediate action required']
}

Enum ScheduleType {
  Daily [note: '0 - Water every day']
  Weekly [note: '1 - Water specific days of week']
  Interval [note: '2 - Water every N days']
}

// =============================================
// Tables
// =============================================

Table Users {
  UserId int [pk, increment, note: 'Primary key']
  Email nvarchar(255) [not null, unique, note: 'User email for login']
  PasswordHash nvarchar(max) [not null, note: 'SHA256 hashed password']
  Name nvarchar(max) [null, note: 'User display name']

  // Shadow properties (managed by EF Core)
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`, note: 'Account creation timestamp']
  UpdatedAt datetime2 [null, note: 'Last update timestamp']
  IsDeleted bit [not null, default: false, note: 'Soft delete flag']

  Indexes {
    Email [name: 'IX_Users_Email']
  }

  Note: 'User accounts for the SmartGarden system'
}

Table UserSettings {
  UserId int [pk, ref: - Users.UserId, note: 'FK to Users (1-to-1)']
  AutoWateringEnabled bit [not null, default: false, note: 'Enable automatic watering']
  SoilMoistThreshold float [not null, default: 30.0, note: 'Minimum moisture % to trigger auto-water']
  DataReadIntervalMin int [not null, default: 15, note: 'How often to read sensors (minutes)']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`]
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Note: 'User preferences and settings (1-to-1 with Users)'
}

Table Species {
  SpeciesId int [pk, increment, note: 'Primary key']
  CommonName nvarchar(100) [not null, note: 'Common plant name (e.g., "Basil")']
  ScientificName nvarchar(max) [null, note: 'Scientific name (e.g., "Ocimum basilicum")']

  // Default environmental ranges for this species
  DefaultSoilMoistMin float [not null, default: 30.0, note: 'Minimum soil moisture %']
  DefaultSoilMoistMax float [not null, default: 70.0, note: 'Maximum soil moisture %']
  DefaultTempMin float [not null, default: 15.0, note: 'Minimum temperature °C']
  DefaultTempMax float [not null, default: 30.0, note: 'Maximum temperature °C']
  DefaultLightMin float [not null, default: 1000.0, note: 'Minimum light level (lux)']
  DefaultLightMax float [not null, default: 50000.0, note: 'Maximum light level (lux)']
  DefaultHumidityMin float [not null, default: 40.0, note: 'Minimum humidity %']
  DefaultHumidityMax float [not null, default: 80.0, note: 'Maximum humidity %']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`]
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Note: 'Plant species master data with ideal growing conditions'
}

Table SoilTypes {
  SoilTypeId int [pk, increment, note: 'Primary key']
  Name nvarchar(100) [not null, note: 'Soil type name (e.g., "Potting Mix")']
  Description nvarchar(max) [null, note: 'Soil characteristics description']
  RecWaterDueSec int [not null, default: 5, note: 'Recommended watering duration (seconds)']
  PauseBetweenWaterMin int [not null, default: 2, note: 'Minimum pause between waterings (minutes)']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`]
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Note: 'Soil type lookup table with watering recommendations'
}

Table Plants {
  PlantId int [pk, increment, note: 'Primary key']
  UserId int [not null, ref: > Users.UserId, note: 'FK to Users - plant owner']
  SpeciesId int [not null, ref: > Species.SpeciesId, note: 'FK to Species - plant type']
  SoilTypeId int [not null, ref: > SoilTypes.SoilTypeId, note: 'FK to SoilTypes - soil used']

  // Plant-specific info
  Nickname nvarchar(80) [null, note: 'User-given nickname (e.g., "My Basil")']
  RoomName nvarchar(80) [null, note: 'Location of plant (e.g., "Kitchen")']
  IsOutdoor bit [not null, default: false, note: 'Indoor vs outdoor plant']
  DateAcquired datetime2 [null, note: 'When user got the plant']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`]
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Indexes {
    UserId [name: 'IX_Plants_UserId']
    SpeciesId [name: 'IX_Plants_SpeciesId']
    SoilTypeId [name: 'IX_Plants_SoilTypeId']
    (UserId, SpeciesId) [name: 'IX_Plants_UserId_SpeciesId']
    (UserId, IsOutdoor) [name: 'IX_Plants_UserId_IsOutdoor']
  }

  Note: 'User plants being monitored by IoT sensors'
}

Table SensorReadings {
  ReadingId bigint [pk, increment, note: 'Primary key (using BIGINT for high volume)']
  PlantId int [not null, ref: > Plants.PlantId, note: 'FK to Plants - which plant this reading is for']

  // Sensor data from ESP32
  SoilMoisture float [not null, note: 'Soil moisture % (0-100)']
  AirTemp float [not null, note: 'Air temperature °C']
  AirHumidity float [not null, note: 'Air humidity % (0-100)']
  LightLevel float [not null, default: 0, note: 'Light level (lux)']
  AirQuality float [not null, default: 0, note: 'Air quality index']
  WaterLevel float [not null, default: 0, note: 'Water reservoir level % or cm']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`, note: 'When reading was taken']
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Indexes {
    PlantId [name: 'IX_SensorReadings_PlantId']
    CreatedAt [name: 'IX_SensorReadings_CreatedAt', note: 'For time-series queries']
  }

  Note: 'Time-series sensor data from ESP32 IoT devices (high-volume table)'
}

Table WateringLogs {
  WateringId bigint [pk, increment, note: 'Primary key (using BIGINT for high volume)']
  PlantId int [not null, ref: > Plants.PlantId, note: 'FK to Plants - which plant was watered']

  // Watering details
  DurationSec int [not null, default: 5, note: 'How long plant was watered (seconds)']
  Mode int [not null, default: 0, note: 'WateringMode enum: 0=Manual, 1=Auto']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`, note: 'When watering occurred']
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Indexes {
    PlantId [name: 'IX_WateringLogs_PlantId']
    CreatedAt [name: 'IX_WateringLogs_CreatedAt', note: 'For history queries']
  }

  Note: 'History of all watering events (manual and automatic)'
}

// =============================================
// NEW TABLES - Enhanced Features
// =============================================

Table Devices {
  DeviceId int [pk, increment, note: 'Primary key']
  UserId int [not null, ref: > Users.UserId, note: 'FK to Users - device owner']
  PlantId int [null, ref: > Plants.PlantId, note: 'FK to Plants - which plant this device monitors (nullable if not assigned)']

  // Device identification
  DeviceName nvarchar(100) [null, note: 'User-friendly device name (e.g., "Garden Sensor 1")']
  DeviceToken nvarchar(255) [not null, unique, note: 'API authentication token for ESP32']
  MacAddress nvarchar(17) [not null, unique, note: 'ESP32 MAC address (format: AA:BB:CC:DD:EE:FF)']
  IpAddress nvarchar(45) [null, note: 'Current IP address (IPv4 or IPv6)']
  FirmwareVersion nvarchar(20) [null, note: 'ESP32 firmware version']

  // Device status
  IsOnline bit [not null, default: false, note: 'Is device currently online']
  LastSeen datetime2 [null, note: 'Last heartbeat timestamp']
  BatteryLevel float [null, note: 'Battery percentage (0-100) if battery powered']
  SignalStrength int [null, note: 'WiFi signal strength (dBm)']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`, note: 'When device was registered']
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Indexes {
    UserId [name: 'IX_Devices_UserId']
    PlantId [name: 'IX_Devices_PlantId']
    MacAddress [name: 'IX_Devices_MacAddress', unique]
    DeviceToken [name: 'IX_Devices_DeviceToken', unique]
    IsOnline [name: 'IX_Devices_IsOnline']
  }

  Note: 'ESP32 IoT devices registered in the system'
}

Table Alerts {
  AlertId bigint [pk, increment, note: 'Primary key']
  PlantId int [not null, ref: > Plants.PlantId, note: 'FK to Plants - which plant triggered this alert']
  UserId int [not null, ref: > Users.UserId, note: 'FK to Users - who should receive this alert']
  DeviceId int [null, ref: > Devices.DeviceId, note: 'FK to Devices - which device generated this alert']

  // Alert details
  AlertType int [not null, note: 'AlertType enum - type of alert']
  Severity int [not null, note: 'AlertSeverity enum - Info/Warning/Critical']
  Title nvarchar(200) [not null, note: 'Alert title (e.g., "Low Soil Moisture")']
  Message nvarchar(500) [not null, note: 'Detailed alert message']

  // Alert metadata
  TriggerValue float [null, note: 'Value that triggered alert (e.g., moisture = 15%)']
  ThresholdValue float [null, note: 'Threshold value (e.g., min moisture = 30%)']

  // Alert status
  IsRead bit [not null, default: false, note: 'Has user read this alert']
  ReadAt datetime2 [null, note: 'When user read the alert']
  IsResolved bit [not null, default: false, note: 'Has issue been resolved']
  ResolvedAt datetime2 [null, note: 'When issue was resolved']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`, note: 'When alert was created']
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Indexes {
    PlantId [name: 'IX_Alerts_PlantId']
    UserId [name: 'IX_Alerts_UserId']
    DeviceId [name: 'IX_Alerts_DeviceId']
    AlertType [name: 'IX_Alerts_AlertType']
    Severity [name: 'IX_Alerts_Severity']
    IsRead [name: 'IX_Alerts_IsRead']
    IsResolved [name: 'IX_Alerts_IsResolved']
    CreatedAt [name: 'IX_Alerts_CreatedAt', note: 'For time-based queries']
    (UserId, IsRead) [name: 'IX_Alerts_UserId_IsRead', note: 'For unread alerts query']
  }

  Note: 'System alerts and notifications for plant care'
}

Table PlantThresholds {
  PlantId int [pk, ref: - Plants.PlantId, note: 'FK to Plants (1-to-1) - which plant these thresholds are for']

  // Custom environmental thresholds (override Species defaults)
  CustomSoilMoistMin float [null, note: 'Custom minimum soil moisture % (overrides Species)']
  CustomSoilMoistMax float [null, note: 'Custom maximum soil moisture %']
  CustomTempMin float [null, note: 'Custom minimum temperature °C']
  CustomTempMax float [null, note: 'Custom maximum temperature °C']
  CustomLightMin float [null, note: 'Custom minimum light level (lux)']
  CustomLightMax float [null, note: 'Custom maximum light level (lux)']
  CustomHumidityMin float [null, note: 'Custom minimum humidity %']
  CustomHumidityMax float [null, note: 'Custom maximum humidity %']

  // Custom watering settings
  CustomWaterDurationSec int [null, note: 'Custom watering duration (overrides SoilType)']
  CustomWaterThreshold float [null, note: 'Custom moisture threshold to trigger auto-water']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`]
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Note: 'Custom environmental thresholds per plant (overrides Species/SoilType defaults)'
}

Table WateringSchedules {
  ScheduleId int [pk, increment, note: 'Primary key']
  PlantId int [not null, ref: > Plants.PlantId, note: 'FK to Plants - which plant to water']

  // Schedule configuration
  IsEnabled bit [not null, default: true, note: 'Is this schedule active']
  ScheduleName nvarchar(100) [null, note: 'User-friendly schedule name (e.g., "Morning Watering")']
  ScheduleType int [not null, default: 0, note: 'ScheduleType enum - Daily/Weekly/Interval']

  // Timing
  TimeOfDay time [not null, note: 'What time to water (e.g., 08:00:00)']
  DaysOfWeek nvarchar(20) [null, note: 'Comma-separated days (e.g., "Mon,Wed,Fri") or bitmask (0=Sun...6=Sat)']
  IntervalDays int [null, note: 'For Interval type: water every N days']

  // Watering details
  DurationSec int [not null, default: 5, note: 'How long to water (seconds)']

  // Schedule state
  NextRunAt datetime2 [null, note: 'When this schedule will run next']
  LastRunAt datetime2 [null, note: 'When this schedule last ran']

  // Shadow properties
  CreatedAt datetime2 [not null, default: `GETUTCDATE()`]
  UpdatedAt datetime2 [null]
  IsDeleted bit [not null, default: false]

  Indexes {
    PlantId [name: 'IX_WateringSchedules_PlantId']
    IsEnabled [name: 'IX_WateringSchedules_IsEnabled']
    NextRunAt [name: 'IX_WateringSchedules_NextRunAt', note: 'For finding due schedules']
    (IsEnabled, NextRunAt) [name: 'IX_WateringSchedules_Enabled_NextRun', note: 'Composite for schedule processing']
  }

  Note: 'Scheduled automatic watering (time-based, not threshold-based)'
}

// =============================================
// Relationships Summary
// =============================================

// User -> UserSettings: 1-to-1
// User -> Plants: 1-to-Many
// Species -> Plants: 1-to-Many
// SoilTypes -> Plants: 1-to-Many
// Plant -> SensorReadings: 1-to-Many
// Plant -> WateringLogs: 1-to-Many
